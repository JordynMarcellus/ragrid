article.full-page
  h1(name="why") Why?
  
  p(md) **The way we talk about the grid, should be the same way we code the grid.** Forget `xs-col-5` or `IbBox W(1/3)`, let's use the same speak we do with people, with our machines. Plus, components are getting popular, and this strategy is much better suited for cards, navbars, lists, etc, than a 12-column strategy.

  code(class='language-markup')
    | &lt;nav grid vertically-aligned="center" horizontally-distributed="between"&gt;‚Ä¶&lt;/nav&gt;

  p(md) Reads like a book right? Inside that are links, not columns! This is bread and butter auto-layout and distribution. If this was your nav bar, each item would be perfectly vertically aligned, and equally spread across the bar, butted up to the edges, and capable of centering multiline text or icons. Mmmmhmmm. Designer or client can add items, remove them, your component doesn't care, **it's ready for dynamic content**.

  p(md) Extrinsic grids like the one below, aren't ready for dynamic content and require extra nodes for each column:
  code(class='language-markup')
    | &lt;section class="col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3"&gt;‚Ä¶&lt;/section&gt;

  //- p(md) Avoiding fixed widths in your layouts will help you be more nimble during development, while also speeding you up. If you need them, and times definitely still call for them, RAGrid's made it easy:
  //- code(class='language-markup')
  //-   | &lt;section grid columns="3"&gt;‚Ä¶&lt;/section&gt;

  h2 Features:
  ul
    li(md) Columns and rows are [intrinsicly](https://www.w3.org/TR/css-sizing-3/) sized by default, so they rag and flow like typography (RAGrid.. get it..)
    li It follows the Adobe/Sketch align tool jargon
    li Layout is described via attributes & values instead of classes
    li(md) Offers a 12-column system, even though it's trying to inspire you out of [extrinsic](https://www.w3.org/TR/css-sizing-3/) grid sizing
    li Can do horizontal and vertical masonry & packery with no javascript
    li Number of children can change and not break your layout
    li: b Auto-layout is cool üëç

  h2 Quick Links:
  ul
    li: a(href='#demo') Demo
    li: a(href='#docs') Docs
    li: a(href='#columns') Columns
    li: a(href='#rows') Rows
    li: a(href='#grids') Grids
    li: a(href='#examples') Examples
